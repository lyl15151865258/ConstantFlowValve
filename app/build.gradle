apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "cn.njmeter.constantflowvalve"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 20180608
        versionName "1.0.0"
        flavorDimensions "versionCode"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        debug {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    lintOptions {
        disable "ResourceType"
    }
    buildTypes {
        debug {
            // 是否支持调试
            debuggable true
            // 是否支持jni调试
            jniDebuggable true
            // 代码压缩
//            minifyEnabled true
            // 是否支持Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
//            shrinkResources true
            // 是否支持本地化整理
            pseudoLocalesEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //打签名包时，需要添加此设置
            signingConfig signingConfigs.debug
        }
        release {
            // 是否支持调试
            debuggable false
            // 是否支持jni调试
            jniDebuggable false
            // 代码压缩
            minifyEnabled true
            // 是否支持Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // 是否支持本地化整理
            pseudoLocalesEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //打签名包时，需要添加此设置
            signingConfig signingConfigs.release
        }
    }

    //渠道Flavors，配置不同风格的app,友盟渠道统计时用到
    productFlavors {
        demo {}
        xiaomi {}
        qh360 {}
        wandoujia {}
        yingyongbao {}
        productFlavors.all {
            flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
            aidl.srcDirs = ['src/main/aidl']
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'     //aar的目录地址
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'org/apache/http/version.properties'
//        exclude'META-INF/LGPL2.1'
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "ConstantFlowValve_${variant.versionName}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        javaMaxHeapSize "4096m"
    }

    //LinearAlloc 主要用来管理 Dalvik 中 class 加载时的内存，就是让 App 在执行时减少系统内存的占用。
    // 在 App 的安装过程中，系统会运行一个名为 dexopt 的程序为该应用在当前机型中运行做准备。
    // dexopt 使用 LinearAlloc 来存储应用的方法信息。
    // App 在执行前会将 class 读进 LinearAlloc 这个 buffer 中，这个 LinearAlloc 在 Android 2.3 之前是 4M 或 5M ，到 4.0 之后变为 8M 或 16M。
    // 因为 5M 实在是太小了，可能还没有 65536 就已经超过 5M 了，什么意思呢，就是只有一个包的情况下也有可能出现 INSTALL_FAILED_DEXOPT ，原因就在于 LinearAlloc
    afterEvaluate{
        tasks.matching {
            it.name.startsWith('dex')
        }.each { dx ->
            if(dx.additionalParameters == null){
                dx.additionalParameters = []
            }
            //To avoid linearAlloc limit problem on Gingerbread and below
            dx.additionalParameters += "--set-max-idx-number=50000"
            dx.additionalParameters += "--minimal-main-dex"
        }
    }
}

repositories {
    mavenCentral()
}

// 在MobSDK的扩展中注册SMSSDK的相关信息
MobSDK {
    appKey keystoreProperties['AppKey_MobSDK']
    appSecret keystoreProperties['AppSecret_MobSDK']
    SMSSDK {}
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.2.1'
    implementation 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.pkmmte.view:circularimageview:1.1'
    implementation files('libs/sunjce_provider.jar')
}
